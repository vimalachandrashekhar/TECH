1. SELECT first_name, last_name, job_id, salary
FROM employees
WHERE first_name LIKE 'S%';

2. select max(salary)
from employees
where salary =(select max(salary)from employees);

3. SELECT *
FROM employees
WHERE salary = (
    SELECT MAX(salary)
    FROM employees
    WHERE salary < (
        SELECT MAX(salary)
        FROM employees
    )
);

4. select salary from employees
order by salary DESC
limit 2,2;

5. SELECT 
    e.first_name AS employee_first_name, 
    e.last_name AS employee_last_name, 
    e.salary AS employee_salary, 
    m.first_name AS manager_first_name, 
    m.last_name AS manager_last_name, 
    m.salary AS manager_salary
FROM employees AS e
INNER JOIN employees AS m ON e.manager_id = m.employee_id;


6. SELECT 
    m.employee_id AS manager_id, 
    m.first_name AS manager_first_name, 
    m.last_name AS manager_last_name, 
    COUNT(e.employee_id) AS employee_count
FROM employees AS e
INNER JOIN employees AS m ON e.manager_id = m.employee_id
GROUP BY m.employee_id
ORDER BY employee_count DESC;


7. SELECT 
    d.department_name, 
    COUNT(e.employee_id) AS employee_count
FROM employees AS e
INNER JOIN departments AS d ON e.department_id = d.department_id
GROUP BY d.department_name;


8. SELECT 
    YEAR(hire_date) AS hire_year, 
    COUNT(employee_id) AS employee_count
FROM employees
GROUP BY YEAR(hire_date);


9. SELECT 
    MIN(salary) AS min_salary, 
    MAX(salary) AS max_salary
FROM employees;

10. SELECT first_name, salary,
    CASE
      WHEN salary >= 10000 AND salary <= 24000 THEN 'Group 1'
      WHEN salary > 5000 AND salary <= 9000 THEN 'Group 2'
      WHEN salary <5000 THEN 'Group 3'
    ELSE 'Not in a group'
    END AS salary_group
    FROM employees;

11.SELECT *
FROM employees
WHERE first_name LIKE '%an%';


12. SELECT 
    first_name, 
    CONCAT('(', LEFT(phone_number, 3), ')-', 
              SUBSTRING(phone_number, 4, 3), '-', 
              RIGHT(phone_number, 4)) AS formatted_phone
FROM employees;

13. SELECT * 
FROM employees 
WHERE MONTH(hire_date) = 8 AND YEAR(hire_date) = 1994;

14.SELECT *
FROM employees
WHERE salary > (SELECT AVG(salary) FROM employees);

15. SELECT department_id, MAX(salary) as max_salary
FROM employees
GROUP BY department_id;


16. SELECT *
FROM employees
ORDER BY salary
LIMIT 5;


17. SELECT *
FROM employees
WHERE YEAR(hire_date) BETWEEN 1980 AND 1989;


18. SELECT first_name, CONCAT(last_name, ', ', first_name) AS 'Name in Reverse Order'
FROM employees;


19. SELECT *
FROM employees
WHERE DAY(hire_date) > 15;


20. SELECT m.first_name AS 'Manager First Name', m.last_name AS 'Manager Last Name',
       e.first_name AS 'Employee First Name', e.last_name AS 'Employee Last Name',
       d.department_name AS 'Employee Department'
FROM employees e
INNER JOIN employees m ON e.manager_id = m.employee_id
INNER JOIN departments d ON e.department_id <> d.department_id
WHERE m.manager_id IS NULL;
